name: CI - back [PREPROD]
on:
  push:
    branches: [dev]

jobs:
  deploy:
    environment: preprod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2


      - name: Install NPM dependencies
        run: npm i

      - name: Build project
        run: npm run build


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
      - name: Build docker image
        run: docker build -t mo29172/vitecamion_back:v${{ github.run_number }} -f ./docker/Dockerfile ./


      - name: Push image to DockerHub
        run: docker push mo29172/vitecamion_back:v${{ github.run_number }}

      - name: Update k8s back deployment file version
        run: sed -i -e"s/:latest/:v${{ github.run_number }}/" docker/k8s/back-deployment.yaml

      
      - name: Copy k8s files to server via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: 'docker/k8s/back-deployment.yaml,docker/k8s/back-cluster-ip-service.yaml,docker/k8s/back-ingress-service.yaml,docker/k8s/back-hpa.yaml'
          target: '/srv/k8s/back'
          strip_components: 2

      - name: Copy nginx file via ssh
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.REMOTE_HOST}}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: 'docker/nginx/default.conf'
          target: '/etc/nginx/conf.d'
          strip_components: 2

      - name: Apply k8s files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_SECOND_USER }}
          password: ${{ secrets.REMOTE_SECOND_USER_PASSWORD }}
          script: |
            kubectl delete secret back-envs
            kubectl create secret generic back-envs \
            --from-literal PORT=${{ secrets.PORT }}
            kubectl apply -f /srv/k8s/back
            minikube addons enable ingress
            echo ${{ secrets.REMOTE_USER_PASSWORD }} | sudo -S systemctl restart nginx
            echo y | docker exec -i minikube docker image prune -a
            echo y | docker exec -i minikube docker volume prune -a